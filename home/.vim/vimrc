" ~/.vimrc
"
" @author Augusto Pascutti

" Plugins {{{
" https://github.com/junegunn/vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin('~/.vim/bundle')

" Essentials
Plug 'vim-syntastic/syntastic'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sleuth'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'editorconfig/editorconfig-vim'

" Syntax or ecosystem plugins (loaded on demand)
Plug 'fatih/vim-go', { 'for': 'go', 'do': ':GoUpdateBinaries' }
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }
Plug 'pearofducks/ansible-vim', { 'for': 'yaml' }
Plug 'itspriddle/vim-shellcheck', { 'for': 'sh' }

" Vanity
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
let g:airline_theme="minimalist"
Plug 'ryanoasis/vim-devicons'

" nvim plugins
if has("nvim")
    " Language Server Protocol
    Plug 'neovim/nvim-lspconfig'
    Plug 'hrsh7th/nvim-cmp'
    Plug 'hrsh7th/cmp-nvim-lsp'
    Plug 'hrsh7th/cmp-vsnip'
    Plug 'hrsh7th/vim-vsnip'
    Plug 'hrsh7th/cmp-nvim-lsp-signature-help'
    Plug 'folke/trouble.nvim'
    Plug 'onsails/lspkind.nvim'
    Plug 'williamboman/mason.nvim'
    Plug 'williamboman/mason-lspconfig.nvim'
    " Better syntax highlight
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
    " Colorscheme
    Plug 'catppuccin/nvim', { 'as': 'catppuccin' }
    " UX
    Plug 'nvim-lua/plenary.nvim'
    Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.6' }
endif

call plug#end()
"}}}

" Visual Configuration {{{
set background=dark
set t_Co=256
set encoding=UTF-8
colorscheme twilight
"}}}

" Global Maps {{{
map <C-n> :NERDTreeTabsToggle<CR>
nnoremap <leader>s :grep! "\b<C-R><C-W>\b"<CR>:copen<CR>
" }}}

" My Preferences {{{
set autoindent
set nowrap
set foldmethod=marker
set foldlevel=99    " fold level when opening a file
set incsearch
set hlsearch
set exrc
set sm              " show matching brackets
set ts=4            " tab stop
set et              " expand tabs
retab               " converts existing tabs
set ruler           " shows ruler
set laststatus=2   " lines of status
set nosmartindent   "
set visualbell      " visual bell
set sw=4            " shift width (>)
set wildmode=longest,list:full
set guioptions=aAce
set cursorline      " highlugh current line
set number          " show line numbers (gutter-like)
set backspace=indent,eol,start
set tags=./.ctags,./tags,tags,~/.common_ctags
" }}}

" The silver searcher
if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor\ --column
    set grepformat=%f:%l:%c%m
    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
    let g:ctrlp_use_caching = 0
endif
